package com.bot.pets_bot.reactions;

import com.bot.pets_bot.mark_ups.MarkUps;
import com.bot.pets_bot.models.entity.Adopter;
import com.bot.pets_bot.models.entity.Animal;
import com.bot.pets_bot.models.entity.TelegramUser;
import com.bot.pets_bot.models.entity.Volunteers;
import com.bot.pets_bot.services.AdopterService;
import com.bot.pets_bot.services.AnimalService;
import com.bot.pets_bot.services.TelegramUserService;
import com.bot.pets_bot.services.VolunteersService;
import com.bot.pets_bot.telegram_utils.MessageProvider;
import com.bot.pets_bot.telegram_utils.StatesStorage;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Random;

@Component
public class AnimalsReactions {

    private final AnimalService animalService;
    private final MessageProvider messageProvider;
    private final TelegramUserService telegramUserService;
    private final VolunteersService volunteersService;
    private final AdopterService adopterService;
    private final StatesStorage statesStorage;

    public AnimalsReactions(AnimalService animalService, MessageProvider messageProvider, TelegramUserService telegramUserService, VolunteersService volunteersService, AdopterService adopterService, StatesStorage statesStorage) {
        this.animalService = animalService;
        this.messageProvider = messageProvider;
        this.telegramUserService = telegramUserService;
        this.volunteersService = volunteersService;
        this.adopterService = adopterService;
        this.statesStorage = statesStorage;
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param page –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏.
     * @param del –£–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ.
     */
    public void putAnimals(long chatId, int messageId, int page, boolean del) {
        if (page < 1){
            return;
        }
        List<Animal> animals = animalService.getAnimalsPage(page, 5);
        if (animals.isEmpty()) {
            return;
        }
        if (del) {
            messageProvider.deleteMessage(chatId, messageId);
            messageProvider.putMessageWithMarkUps(chatId, "üêæ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–∏—é—Ç–∞ –¥–ª—è —Å–æ–±–∞–∫!</b> üê∂\n" +
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–∞–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –±–æ–ª—å—à–µ:", MarkUps.getPageAnimal(page,
                    animals));
            return;
        }
        messageProvider.changeText(chatId, messageId, "üêæ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–∏—é—Ç–∞ –¥–ª—è —Å–æ–±–∞–∫!</b> üê∂\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–∞–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –±–æ–ª—å—à–µ:");
        messageProvider.changeInline(chatId, messageId, MarkUps.getPageAnimal(page,
                animals));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∏–≤–æ—Ç–Ω–æ–º –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param animalId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–∏–≤–æ—Ç–Ω–æ–≥–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏.
     */
    public void infoAboutAnimal(long chatId, int messageId, long animalId) {
        Animal animal = animalService.getAnimalById(animalId);
        if (animal == null) {
            messageProvider.changeText(chatId, messageId, "–í–æ–∑–Ω–∏–∫–ª–∞ –û—à–∏–±–∫–∞");
            messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimals 1"));
            return;
        }

        String status = animal.getStatus() != null && animal.getStatus().getStatusName() != null
                ? animal.getStatus().getStatusName()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω";

        String name = animal.getName() != null
                ? animal.getName()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω–æ";

        String description = animal.getDescription() != null
                ? animal.getDescription()
                : "–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è";

        String color = animal.getColor() != null
                ? animal.getColor()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω";

        String age = animal.getAge() + "";

        String kind = animal.getKind() != null
                ? animal.getKind()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω–∞";


        String info = String.format(
                """
                        üêæ <b>%s</b> ‚Äî <i>%s</i>
                        
                        üìã <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> %s
                        üé® <b>–û–∫—Ä–∞—Å:</b> %s
                        üìÖ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> %s –ª–µ—Ç
                        üêï <b>–ü–æ—Ä–æ–¥–∞:</b> %s""", name, status, description, color, age, kind);

        String photoUrl = animal.getPhotoUrl();

        if (photoUrl == null) {
            messageProvider.changeText(chatId, messageId, info);
            messageProvider.changeInline(chatId, messageId, MarkUps.
                    getAnimal("backToAnimals 1", animalId, chatId));
            return;
        }

        messageProvider.deleteMessage(chatId, messageId);
        messageProvider.sendPhoto(chatId, info, animal.getPhotoUrl(), MarkUps.
                getAnimal("backToAnimalsDel 1", animalId, chatId));
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –≤–∑—è—Ç–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ.
     * @param adoptChatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–∞—è–≤–∫–∞.
     */
    public void reactionOnTakeAnimal(long chatId, int messageId, long adoptChatId) {
        messageProvider.deleteMessage(chatId, messageId);
        List<Volunteers> volunteers = volunteersService.getVolunteers();
        if (volunteers.isEmpty()) {
            messageProvider.putMessage(chatId, "–°–µ–π—á–∞—Å –Ω–µ—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤!");
            return;
        }
        Random rand = new Random();
        Volunteers volunteer = volunteers.get(rand.nextInt(volunteers.size()));
        TelegramUser telegramUser = telegramUserService.getTelegramUserByTelegramId(chatId);

        if (telegramUser.getContact() == null) {
            messageProvider.putMessage(chatId, "–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä!");
            return;
        }

        messageProvider.putMessageWithMarkUps(volunteer.getTelegramId(),
                "–ó–∞—è–≤–∫–∞ –æ—Ç " + telegramUser.getContact(),
                MarkUps.acceptReject(chatId,
                        adoptChatId,
                        telegramUser.getName(),
                        telegramUser.getContact(),
                        "acceptA",
                        "rejectA"
                ));
        messageProvider.putMessage(chatId, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!");
    }

    public void reactionsOnSendReport(long chatId){
        Adopter adopter = adopterService.findAdopterByTelegramId(chatId);
        if ((adopter.getAnimal() != null) && !(adopter.isSendReport())) {
            statesStorage.getSendReport().put(chatId, true);
            messageProvider.putMessage(chatId, """
                                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∫ –Ω–µ–π –æ—Ç—á–µ—Ç, –≤–∫–ª—é—á–∞—é—â–∏–π —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:
                                - *–§–æ—Ç–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.*
                                - *–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Ü–∏–æ–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.*
                                - *–û–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –Ω–æ–≤–æ–º—É –º–µ—Å—Ç—É.*
                                - *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏: –æ—Ç–∫–∞–∑ –æ—Ç —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö.*
                                """);
        } else if (adopter.getAnimal() != null) {
            messageProvider.putMessage(chatId, "–°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –æ—Ç—á–µ—Ç");
        } else {
            messageProvider.putMessage(chatId, "–í—ã –µ—â–µ –Ω–µ –≤–∑—è–ª–∏ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏–∑ –Ω–∞—à–µ–≥–æ –ø—Ä–∏—é—Ç–∞!?");
        }
    }


    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—Å—ã–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ.
     * @param call_split_data –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∏—Ç–µ–ª–µ –∏ –∂–∏–≤–æ—Ç–Ω–æ–º.
     */
    public void reactionsOnAccept(long chatId, int messageId, String[] call_split_data) {
        long telegramId = Long.parseLong(call_split_data[1]);
        String name = call_split_data[3];
        String contact = call_split_data[4];
        Adopter adopter = adopterService.findAdopterByTelegramId(telegramId);

        if (adopter == null) {
            adopter = new Adopter();
            adopter.setTelegramId(telegramId);
            adopter.setName(name);
            adopter.setContact(contact);
            adopter = adopterService.putAdopter(adopter);
        } else if (adopter.getAnimal() != null) {
            messageProvider.putMessage(chatId, "–¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –±–æ–ª—å—à–µ 1 –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥");
        }

        Animal animal = animalService.getAnimalById(Long.parseLong(call_split_data[2]));

        adopter.setAnimal(animal);

        animal.setAdopter(adopter);

        animalService.putAnimal(animal);

        adopterService.putAdopter(adopter);

        messageProvider.deleteMessage(chatId, messageId);

        messageProvider.putMessage(telegramId, "–í–∞—à—É –∑–∞—è–≤–∫—É –ø—Ä–∏–Ω—è–ª–∏!");
    }
}
