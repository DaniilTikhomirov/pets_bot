package com.bot.pets_bot.controllers.bot;

import com.bot.pets_bot.config.BotConfig;
import com.bot.pets_bot.mark_ups.MarkUps;
import com.bot.pets_bot.models.dto.ReportsDTO;
import com.bot.pets_bot.models.dto.TelegramUserDTO;
import com.bot.pets_bot.models.entity.*;
import com.bot.pets_bot.services.*;
import com.bot.pets_bot.telegram_utils.MessageProvider;
import com.bot.pets_bot.telegram_utils.ModelsHelper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.*;

import java.io.File;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;


/**
 * –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞ –ø—Ä–∏—é—Ç–∞.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞, –≤–∫–ª—é—á–∞—è –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç—á–µ—Ç–æ–≤, –∑–∞–ø—Ä–æ—Å—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏—é—Ç–µ,
 * –∞ —Ç–∞–∫–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º–∏ –∏ —É—Å—ã–Ω–æ–≤–∏—Ç–µ–ª—è–º–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö.
 */
@Slf4j
@Component
public class ShelterBot extends TelegramLongPollingBot {
    private final BotConfig botConfig;
    private final TelegramUserService telegramUserService;
    private final MessageProvider messageProvider;
    private final VolunteersService volunteersService;
    private final ShelterInfoService shelterInfoService;
    private final AnimalService animalService;
    private final AnimalAdviceService animalAdviceService;
    private final DogHandlerService dogHandlerService;
    private final AdopterService adopterService;
    private final Map<Long, Boolean> sendReport;
    private final ReportsService reportsService;

    @Value("${my.shelter.id}")
    private long SHELTER_ID;

    @Value("${my.animals.advice.id}")
    private long ANIMALS_ADVICE_ID;


    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏—é—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
     */
    private final String INFO_ABOUT_SHELTER = """
            <b>–û –Ω–∞—à–µ–º –ø—Ä–∏—é—Ç–µ</b>
            
            –ù–∞—à –ø—Ä–∏—é—Ç ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç –∑–∞–±–æ—Ç—É, –ª—é–±–æ–≤—å –∏ —à–∞–Ω—Å –Ω–∞ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å. üêæ
            –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Å–ø–∞—Å–µ–Ω–∏–µ–º, –ª–µ—á–µ–Ω–∏–µ–º –∏ –ø–æ–∏—Å–∫–æ–º –¥–æ–º–∞ –¥–ª—è –±–µ–∑–¥–æ–º–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö.
            
            –ö–∞–∂–¥—ã–π –ø–∏—Ç–æ–º–µ—Ü, –∫–æ—Ç–æ—Ä—ã–π –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É –Ω–∞—Å, –æ–∫—Ä—É–∂—ë–Ω –≤–Ω–∏–º–∞–Ω–∏–µ–º –∏ –∑–∞–±–æ—Ç–æ–π.
            –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–¥–µ–ª–∞—Ç—å –º–∏—Ä –¥–æ–±—Ä–µ–µ, –ø–æ–º–æ–≥–∞—è —Ç–µ–º, –∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Å–µ–±–µ —Å–∞–º. ‚ù§Ô∏è""";

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.
     *
     * @param botConfig –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞.
     * @param telegramUserService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ Telegram.
     * @param messageProvider –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     * @param volunteersService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º–∏.
     * @param shelterInfoService –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏—é—Ç–µ.
     * @param animalService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏.
     * @param animalAdviceService –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —É—Ö–æ–¥—É –∑–∞ –∂–∏–≤–æ—Ç–Ω—ã–º–∏.
     * @param dogHandlerService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∏–Ω–æ–ª–æ–≥–∞–º–∏.
     * @param adopterService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å—ã–Ω–æ–≤–∏—Ç–µ–ª—è–º–∏.
     * @param reportsService –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç—á–µ—Ç–∞–º–∏.
     */
    public ShelterBot(BotConfig botConfig,
                      TelegramUserService telegramUserService,
                      MessageProvider messageProvider,
                      VolunteersService volunteersService,
                      ShelterInfoService shelterInfoService,
                      AnimalService animalService,
                      AnimalAdviceService animalAdviceService,
                      DogHandlerService dogHandlerService,
                      AdopterService adopterService,
                      ReportsService reportsService) {
        super(botConfig.getBotToken());
        this.botConfig = botConfig;
        this.telegramUserService = telegramUserService;
        this.messageProvider = messageProvider;
        this.volunteersService = volunteersService;
        this.shelterInfoService = shelterInfoService;
        this.animalService = animalService;
        this.animalAdviceService = animalAdviceService;
        this.dogHandlerService = dogHandlerService;
        this.adopterService = adopterService;
        this.sendReport = new ConcurrentHashMap<>();
        this.reportsService = reportsService;
    }


    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,
     * –≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
     *
     * @param update –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –æ—Ç Telegram.
     */
    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage()
                && sendReport.containsKey(update.getMessage().getChatId())
                && sendReport.get(update.getMessage().getChatId())) {
            Message message = update.getMessage();
            long chat_id = message.getChatId();

            List<Volunteers> volunteers = volunteersService.getVolunteers();

            if (volunteers.isEmpty()) {
                messageProvider.putMessage(chat_id, "–°–µ–π—á–∞—Å –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç! –ú—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º");
                return;
            }

            if (!message.hasPhoto()) {
                messageProvider.putMessage(chat_id, """
                        –í –≤–∞—à–µ–º –æ—Ç—á–µ—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è""");
                return;
            }

            if (message.getCaption() == null) {
                messageProvider.putMessage(chat_id, """
                        –í –≤–∞—à–µ–º –æ—Ç—á–µ—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\
                        - *–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Ü–∏–æ–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.*
                        - *–û–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –Ω–æ–≤–æ–º—É –º–µ—Å—Ç—É.*
                        - *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏: –æ—Ç–∫–∞–∑ –æ—Ç —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö.*""");
                return;
            }
            Random random = new Random();
            Volunteers volunteer = volunteers.get(random.nextInt(volunteers.size()));

            Adopter adopter = adopterService.findAdopterByTelegramId(chat_id);


            List<PhotoSize> photoSizes = message.getPhoto();

            PhotoSize photoSize = photoSizes.getLast();

            String fileId = photoSize.getFileId();
            ReportsDTO reportsDTO = new ReportsDTO();

            reportsDTO.setText(message.getCaption());
            reportsDTO.setAdopterId(adopter.getId());
            reportsDTO.setVolunteerId(volunteer.getId());
            reportsDTO.setAnimalId(adopter.getAnimal().getId());

            Reports reports = reportsService.addReports(reportsDTO);

            File file = messageProvider.getFile(fileId, chat_id + "");

            reportsService.addPhoto(file, reports.getId());

            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(volunteer.getTelegramId());
            sendPhoto.setPhoto(new InputFile(fileId));
            sendPhoto.setCaption("–û—Ç—á–µ—Ç –æ—Ç: " + adopter.getName() + "\n" +
                    message.getCaption());
            sendPhoto.setReplyMarkup(MarkUps.acceptReject(adopter.getTelegramId(), adopter.getAnimal().getId(),
                    adopter.getName(),
                    adopter.getContact(),
                    "acceptR " + reports.getId(),
                    "rejectR " + reports.getId()));

            try {
                execute(sendPhoto);
                messageProvider.putMessage(chat_id, "–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start");
                sendReport.remove(chat_id);
            } catch (Exception e) {
                log.error(e.getMessage());
            }

        }
        if (update.hasMessage() && update.getMessage().hasText()) {
            String message = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            log.trace(message);


            if (message.equals("/start")) {
                sendReport.remove(chatId);
                startMessage(chatId, update.getMessage().getChat().getFirstName());
            } else {
                messageProvider.putMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!");
            }
        }

        if (update.hasCallbackQuery()) {
            String callbackQuery = update.getCallbackQuery().getData();
            int messageId = update.getCallbackQuery().getMessage().getMessageId();
            long chatId = update.getCallbackQuery().getMessage().getChatId();

            String[] call_split_data = callbackQuery.split(" ");
            log.trace(Arrays.toString(call_split_data));

            switch (call_split_data[0]) {
                case "callVolunteer" -> {
                    reactionOnCallVolunteer(chatId, messageId, call_split_data[1]);

                }

                case "infoAboutShelter", "BackToInfoAboutShelterMenu" -> {
                    reactionOnInfoAboutShelter(chatId, messageId);
                }

                case "infoAboutTakeAnimals", "backToAnimalsAdviceMenu" -> {
                    messageProvider.changeText(chatId, messageId, "–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å");
                    messageProvider.changeInline(chatId, messageId, MarkUps.getRuleForAnimals());
                }

                case "generalInformation" -> {
                    reactionOnGeneralInformation(chatId, messageId);
                }
                case "getAnimals", "next_animal", "prev_animal", "backToAnimals" -> {
                    putAnimals(chatId, messageId, Integer.parseInt(call_split_data[1]), false);
                }

                case "click_on_animal" -> {
                    infoAboutAnimal(chatId, messageId, Long.parseLong(call_split_data[1]));
                }

                case "click_on_dogHandler" -> {
                    infoAboutDogHandler(chatId, messageId, Long.parseLong(call_split_data[1]));
                }

                case "takeAnimal" -> {
                    reactionOnTakeAnimal(chatId, messageId, Long.parseLong(call_split_data[1]));
                }

                case "sendReportAboutAnimal" -> {

                    Adopter adopter = adopterService.findAdopterByTelegramId(chatId);
                    if ((adopter.getAnimal() != null) && !(adopter.isSendReport())) {
                        sendReport.put(chatId, true);
                        messageProvider.putMessage(chatId, """
                                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∫ –Ω–µ–π –æ—Ç—á–µ—Ç, –≤–∫–ª—é—á–∞—é—â–∏–π —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:
                                - *–§–æ—Ç–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.*
                                - *–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Ü–∏–æ–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.*
                                - *–û–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –Ω–æ–≤–æ–º—É –º–µ—Å—Ç—É.*
                                - *–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏: –æ—Ç–∫–∞–∑ –æ—Ç —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö.*
                                """);
                    } else if (adopter.getAnimal() != null) {
                        messageProvider.putMessage(chatId, "–°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –æ—Ç—á–µ—Ç");
                    } else {
                        messageProvider.putMessage(chatId, "–í—ã –µ—â–µ –Ω–µ –≤–∑—è–ª–∏ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏–∑ –Ω–∞—à–µ–≥–æ –ø—Ä–∏—é—Ç–∞!?");
                    }
                }

                case "securityPrecautions" -> {
                    reactionOnSecurityPrecautions(chatId, messageId);
                }

                case "acceptA" -> {
                    reactionsOnAccept(chatId, messageId, call_split_data);
                }

                case "acceptR" -> {
                    long telegramId = Long.parseLong(call_split_data[2]);
                    Reports reports = reportsService.getReportsById(Long.parseLong(call_split_data[1]));

                    reports.setAccepted(true);

                    reportsService.putReports(reports);

                    Adopter adopter = reports.getAdopter();

                    adopter.setStreakCounter(adopter.getStreakCounter() + 1);

                    adopter.setWarningStreakCounter(0);

                    adopter.setSendReport(true);

                    adopterService.putAdopter(adopter);

                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessage(telegramId, "–í–∞—à –æ—Ç—á–µ—Ç –ø—Ä–∏–Ω—è–ª–∏!");
                }
                case "acceptP" -> {
                    long adopterTelegramId = Long.parseLong(call_split_data[1]);
                    Adopter adopter = adopterService.findAdopterByTelegramId(adopterTelegramId);
                    Animal animal = animalService.getAnimalById(Long.parseLong(call_split_data[2]));

                    adopter.setAnimal(null);
                    adopter.setWarningStreakCounter(0);
                    adopter.setStreakCounter(0);
                    adopter.setWarningCounter(0);
                    adopterService.putAdopter(adopter);

                    animal.setTake(true);

                    animalService.putAnimal(animal);

                    messageProvider.putMessage(adopterTelegramId, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!");

                }

                case "add30Days" -> {
                    long adopterTelegramId = Long.parseLong(call_split_data[1]);
                    Adopter adopter = adopterService.findAdopterByTelegramId(adopterTelegramId);

                    adopter.setStreakCounter(0);

                    adopterService.putAdopter(adopter);

                    messageProvider.putMessage(adopterTelegramId, "–í–∞–º –¥–æ–±–∞–≤–∏–ª–∏ 30 –¥–Ω–µ–π –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –ø–µ—Ä–∏–æ–¥—É");
                }

                case "add14days" -> {
                    long adopterTelegramId = Long.parseLong(call_split_data[1]);
                    Adopter adopter = adopterService.findAdopterByTelegramId(adopterTelegramId);

                    adopter.setStreakCounter(15);

                    adopterService.putAdopter(adopter);

                    messageProvider.putMessage(adopterTelegramId, "–í–∞–º –¥–æ–±–∞–≤–∏–ª–∏ 14 –¥–Ω–µ–π –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –ø–µ—Ä–∏–æ–¥—É");

                }

                case "rejectA" -> {
                    long telegramId = Long.parseLong(call_split_data[1]);

                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessage(telegramId, "–í–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–æ–Ω–∏–ª–∏!");
                }

                case "rejectR" -> {
                    long telegramId = Long.parseLong(call_split_data[2]);

                    Reports reports = reportsService.getReportsById(Long.parseLong(call_split_data[1]));
                    Adopter adopter = reports.getAdopter();

                    adopter.setWarningStreakCounter(adopter.getWarningStreakCounter() + 1);

                    adopter.setWarningCounter(adopter.getWarningCounter() + 1);

                    adopter.setSendReport(true);

                    adopterService.putAdopter(adopter);

                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessage(telegramId, "–í–∞—à –æ—Ç—á–µ—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª–∏!");
                }

                case "rulesAndDocument" -> {
                    reactionsOnRulesAndDocument(chatId, messageId);
                }

                case "animalGuide" -> {
                    reactionOnAnimalGuide(chatId, messageId);
                }

                case "dogHandleAdvice" -> {
                    reactionsOnDogHandleAdvice(chatId, messageId);
                }

                case "reasonsForRefusal" -> {
                    reactionReasonsForRefusal(chatId, messageId);
                }

                case "dogHandles", "next_dogHandler", "prev_dogHandler", "backToDogHandlers" -> {
                    putDogHandler(chatId, messageId, Integer.parseInt(call_split_data[1]), false);
                }

                case "backToInfoAboutShelterMenuDel" -> {
                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessageWithMarkUps(chatId, INFO_ABOUT_SHELTER, MarkUps.InfoAboutShelterMenu());
                }

                case "backToAnimalsAdviceMenuDel" -> {
                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessageWithMarkUps(chatId, "–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å",
                            MarkUps.getRuleForAnimals());
                }

                case "backToAnimalsDel" -> {
                    putAnimals(chatId, messageId, Integer.parseInt(call_split_data[1]), true);
                }

                case "backToDogHandlersDel" -> {
                    putDogHandler(chatId, messageId, Integer.parseInt(call_split_data[1]), true);
                }

                case "getContact" -> {
                    reactionOnGetContact(chatId, messageId);
                }

                case "backToMenuDel" -> {
                    messageProvider.deleteMessage(chatId, messageId);
                    messageProvider.putMessageWithMarkUps(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª",
                            MarkUps.startMenu());
                }

                case "backToMenu" -> {
                    messageProvider.changeText(chatId, messageId, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª");
                    messageProvider.changeInline(chatId, messageId, MarkUps.startMenu());
                }


            }

        }
        if (update.hasMessage() && update.getMessage().hasContact()) {
            Contact contact = update.getMessage().getContact();
            long chatId = update.getMessage().getChatId();
            String phoneNumber = contact.getPhoneNumber();

            messageProvider.putMessageWithMarkUps(chatId, INFO_ABOUT_SHELTER, MarkUps.InfoAboutShelterMenu(),
                    true);

            TelegramUser telegramUser = telegramUserService.getTelegramUserByTelegramId(chatId);
            telegramUser.setContact(formatingPhoneNumber(phoneNumber));

            telegramUserService.putTelegramUser(telegramUser);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∏–Ω–æ–ª–æ–≥–µ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param dogHandlerId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∏–Ω–æ–ª–æ–≥–∞, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏.
     */
    private void infoAboutDogHandler(long chatId, int messageId, long dogHandlerId) {
        DogHandler dogHandler = dogHandlerService.getDogHandler(dogHandlerId);
        if (dogHandler == null) {
            messageProvider.changeText(chatId, messageId, "–í–æ–∑–Ω–∏–∫–ª–∞ –û—à–∏–±–∫–∞");
            messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToDogHandlers 1"));
            return;
        }

        String description = dogHandler.getDescription() != null ? dogHandler.getDescription() : "–ù–µ —É–∫–∞–∑–∞–Ω–æ";

        String info = String.format(
                """
                        <b>üßë‚Äç‚öñÔ∏è –ò–º—è –∫–∏–Ω–æ–ª–æ–≥–∞:</b> %s %s
                        <b>üìû –ö–æ–Ω—Ç–∞–∫—Ç:</b> %s
                        <b>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</b> %s""",
                dogHandler.getName().trim(),
                dogHandler.getSecondName().trim(),
                dogHandler.getContact().trim(),
                description.trim()
        );

        String photoUrl = dogHandler.getPhotoUrl();

        if (photoUrl == null) {
            messageProvider.changeText(chatId, messageId, info);
            messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToDogHandlers 1"));
            return;
        }

        messageProvider.deleteMessage(chatId, messageId);
        messageProvider.sendPhoto(chatId, info, photoUrl, MarkUps.backButton("backToDogHandlersDel 1"));


    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—Å—ã–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ.
     * @param call_split_data –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∏—Ç–µ–ª–µ –∏ –∂–∏–≤–æ—Ç–Ω–æ–º.
     */
    private void reactionsOnAccept(long chatId, int messageId, String[] call_split_data) {
        long telegramId = Long.parseLong(call_split_data[1]);
        String name = call_split_data[3];
        String contact = call_split_data[4];
        Adopter adopter = adopterService.findAdopterByTelegramId(telegramId);

        if (adopter == null) {
            adopter = new Adopter();
            adopter.setTelegramId(telegramId);
            adopter.setName(name);
            adopter.setContact(contact);
            adopter = adopterService.putAdopter(adopter);
        } else if (adopter.getAnimal() != null) {
            messageProvider.putMessage(chatId, "–¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –±–æ–ª—å—à–µ 1 –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥");
        }

        Animal animal = animalService.getAnimalById(Long.parseLong(call_split_data[2]));

        adopter.setAnimal(animal);

        animal.setAdopter(adopter);

        animalService.putAnimal(animal);

        adopterService.putAdopter(adopter);

        messageProvider.deleteMessage(chatId, messageId);

        messageProvider.putMessage(telegramId, "–í–∞—à—É –∑–∞—è–≤–∫—É –ø—Ä–∏–Ω—è–ª–∏!");
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –≤–∑—è—Ç–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ.
     * @param adoptChatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–∞—è–≤–∫–∞.
     */
    private void reactionOnTakeAnimal(long chatId, int messageId, long adoptChatId) {
        messageProvider.deleteMessage(chatId, messageId);
        List<Volunteers> volunteers = volunteersService.getVolunteers();
        if (volunteers.isEmpty()) {
            messageProvider.putMessage(chatId, "–°–µ–π—á–∞—Å –Ω–µ—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤!");
            return;
        }
        Random rand = new Random();
        Volunteers volunteer = volunteers.get(rand.nextInt(volunteers.size()));
        TelegramUser telegramUser = telegramUserService.getTelegramUserByTelegramId(chatId);

        if (telegramUser.getContact() == null) {
            messageProvider.putMessage(chatId, "–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä!");
            return;
        }

        messageProvider.putMessageWithMarkUps(volunteer.getTelegramId(),
                "–ó–∞—è–≤–∫–∞ –æ—Ç " + telegramUser.getContact(),
                MarkUps.acceptReject(chatId,
                        adoptChatId,
                        telegramUser.getName(),
                        telegramUser.getContact(),
                        "acceptA",
                        "rejectA"
                ));
        messageProvider.putMessage(chatId, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!");
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∏–≤–æ—Ç–Ω–æ–º –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param animalId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–∏–≤–æ—Ç–Ω–æ–≥–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏.
     */
    private void infoAboutAnimal(long chatId, int messageId, long animalId) {
        Animal animal = animalService.getAnimalById(animalId);
        if (animal == null) {
            messageProvider.changeText(chatId, messageId, "–í–æ–∑–Ω–∏–∫–ª–∞ –û—à–∏–±–∫–∞");
            messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimals 1"));
            return;
        }

        String status = animal.getStatus() != null && animal.getStatus().getStatusName() != null
                ? animal.getStatus().getStatusName()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω";

        String name = animal.getName() != null
                ? animal.getName()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω–æ";

        String description = animal.getDescription() != null
                ? animal.getDescription()
                : "–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è";

        String color = animal.getColor() != null
                ? animal.getColor()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω";

        String age = animal.getAge() + "";

        String kind = animal.getKind() != null
                ? animal.getKind()
                : "–Ω–µ —É–∫–∞–∑–∞–Ω–∞";


        String info = String.format(
                """
                        üêæ <b>%s</b> ‚Äî <i>%s</i>
                        
                        üìã <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> %s
                        üé® <b>–û–∫—Ä–∞—Å:</b> %s
                        üìÖ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> %s –ª–µ—Ç
                        üêï <b>–ü–æ—Ä–æ–¥–∞:</b> %s""", name, status, description, color, age, kind);

        String photoUrl = animal.getPhotoUrl();

        if (photoUrl == null) {
            messageProvider.changeText(chatId, messageId, info);
            messageProvider.changeInline(chatId, messageId, MarkUps.
                    getAnimal("backToAnimals 1", animalId, chatId));
            return;
        }

        messageProvider.deleteMessage(chatId, messageId);
        messageProvider.sendPhoto(chatId, info, animal.getPhotoUrl(), MarkUps.
                getAnimal("backToAnimalsDel 1", animalId, chatId));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param page –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏.
     * @param del –£–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ.
     */
    private void putAnimals(long chatId, int messageId, int page, boolean del) {
        if (page < 1){
            return;
        }
        List<Animal> animals = animalService.getAnimalsPage(page, 5);
        if (animals.isEmpty()) {
            return;
        }
        if (del) {
            messageProvider.deleteMessage(chatId, messageId);
            messageProvider.putMessageWithMarkUps(chatId, "üêæ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–∏—é—Ç–∞ –¥–ª—è —Å–æ–±–∞–∫!</b> üê∂\n" +
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–∞–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –±–æ–ª—å—à–µ:", MarkUps.getPageAnimal(page,
                    animals));
            return;
        }
        messageProvider.changeText(chatId, messageId, "üêæ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–∏—é—Ç–∞ –¥–ª—è —Å–æ–±–∞–∫!</b> üê∂\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–∞–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –±–æ–ª—å—à–µ:");
        messageProvider.changeInline(chatId, messageId, MarkUps.getPageAnimal(page,
                animals));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∏–Ω–æ–ª–æ–≥–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     * @param page –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫–∏–Ω–æ–ª–æ–≥–∞–º–∏.
     * @param del –£–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ.
     */
    private void putDogHandler(long chatId, int messageId, int page, boolean del) {
        AnimalsAdvice animalsAdvice = animalAdviceService.getAnimalAdviceById(ANIMALS_ADVICE_ID);
        if (reactionOnError(chatId, messageId, animalsAdvice)) {
            return;
        }

        if (page < 1){
            return;
        }

        List<DogHandler> dogHandlers = ModelsHelper.getPage(page, 5, animalsAdvice.getDogHandlers());

        if (dogHandlers.isEmpty()) {
            return;
        }
        if (del) {
            messageProvider.deleteMessage(chatId, messageId);
            messageProvider.putMessageWithMarkUps(chatId, "\uD83D\uDC69\u200D‚öïÔ∏è\uD83D\uDC15" +
                    " –ù–∞—à–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–∏–Ω–æ–ª–æ–≥–∏:", MarkUps.getPageDogHandler(page,
                    dogHandlers));
            return;
        }
        messageProvider.changeText(chatId, messageId, "\uD83D\uDC69\u200D‚öïÔ∏è\uD83D\uDC15" +
                " –ù–∞—à–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–∏–Ω–æ–ª–æ–≥–∏:");
        messageProvider.changeInline(chatId, messageId, MarkUps.getPageDogHandler(page,
                dogHandlers));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–∞ –≤ –ø–µ—Ä–µ–¥–∞—á–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
     *
     * @param chatId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param messageId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
     */
    private void reactionReasonsForRefusal(long chatId, int messageId) {
        AnimalsAdvice animalsAdvice = animalAdviceService.getAnimalAdviceById(ANIMALS_ADVICE_ID);
        if (reactionOnError(chatId, messageId, animalsAdvice)) {
            return;
        }

        String info = String.format(
                """
                        üö´ <b>–ü—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞ –≤ –ø–µ—Ä–µ–¥–∞—á–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ:</b>
                        –ë–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤–∞–º –º–æ–≥—É—Ç –æ—Ç–∫–∞–∑–∞—Ç—å \
                        –≤ –∑–∞–±–∏—Ä–∞–Ω–∏–∏ —Å–æ–±–∞–∫–∏ –∏–∑ –ø—Ä–∏—é—Ç–∞. –≠—Ç–∏ –ø—Ä–∏—á–∏–Ω—ã –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å:
                        
                        %s""",
                animalsAdvice.getReasonsForRefusal().trim()
        );

        messageProvider.changeText(chatId, messageId, info);
        messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimalsAdviceMenu"));
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
     * <p>
     * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–æ–∫–æ–π, –≤ —Ñ–æ—Ä–º–∞—Ç:
     * code-XXX-XXX-XXX.
     * </p>
     *
     * @param phoneNumber –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
     * @return –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
     */
    private String formatingPhoneNumber(String phoneNumber) {
        StringBuilder sb = new StringBuilder();

        sb.append(phoneNumber.charAt(phoneNumber.length() - 1)).append(phoneNumber.charAt(phoneNumber.length() - 2));
        sb.append("-");
        sb.append(phoneNumber.charAt(phoneNumber.length() - 3)).append(phoneNumber.charAt(phoneNumber.length() - 4));
        sb.append("-");
        sb.append(phoneNumber.charAt(phoneNumber.length() - 5)).append(phoneNumber.charAt(phoneNumber.length() - 6)).
                append(phoneNumber.charAt(phoneNumber.length() - 7));
        sb.append("-");
        sb.append(phoneNumber.charAt(phoneNumber.length() - 8)).append(phoneNumber.charAt(phoneNumber.length() - 9)).
                append(phoneNumber.charAt(phoneNumber.length() - 10));
        sb.append("-");

        for (int i = 11; i <= phoneNumber.length(); i++) {
            sb.append(phoneNumber.charAt(phoneNumber.length() - i));
        }

        sb.reverse();
        return sb.toString();
    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç AnimalsAdvice —Ä–∞–≤–µ–Ω null.
     * <p>
     * –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç animalsAdvice –Ω–µ –Ω–∞–π–¥–µ–Ω, –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏
     * –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param animalsAdvice –æ–±—ä–µ–∫—Ç —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö
     * @return true, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –∏–Ω–∞—á–µ false
     */
    private boolean reactionOnError(long chatId, int messageId, AnimalsAdvice animalsAdvice) {
        if (animalsAdvice == null) {
            messageProvider.changeText(chatId, messageId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ");
            messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimalsAdviceMenu"));
            return true;
        }

        return false;
    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –∂–∏–≤–æ—Ç–Ω—ã–º –∏ —Å–ø–∏—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –∂–∏–≤–æ—Ç–Ω—ã–º –∏
     * —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏–∑ –ø—Ä–∏—é—Ç–∞.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionsOnRulesAndDocument(long chatId, int messageId) {
        AnimalsAdvice animalsAdvice = animalAdviceService.getAnimalAdviceById(ANIMALS_ADVICE_ID);
        if (reactionOnError(chatId, messageId, animalsAdvice)) {
            return;
        }

        String info = String.format("""
                        ‚ú® <b>–ü—Ä–∞–≤–∏–ª–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –∂–∏–≤–æ—Ç–Ω—ã–º:</b>
                        %s
                        
                        üìã <b>–°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏–∑ –ø—Ä–∏—é—Ç–∞:</b>
                        %s""",
                animalsAdvice.getRulesForGettingAnimal().trim(),
                animalsAdvice.getDocumentsForAnimal().trim());

        messageProvider.changeText(chatId, messageId, info);
        messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimalsAdviceMenu"));
    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –∏ –æ–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –¥–æ–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ
     * –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏ –ø–æ –æ–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –¥–æ–º–∞ –¥–ª—è —â–µ–Ω–∫–∞ –∏–ª–∏ –≤–∑—Ä–æ—Å–ª–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionOnAnimalGuide(long chatId, int messageId) {
        AnimalsAdvice animalsAdvice = animalAdviceService.getAnimalAdviceById(ANIMALS_ADVICE_ID);
        if (reactionOnError(chatId, messageId, animalsAdvice)) {
            return;
        }

        String info = String.format(
                """
                         üéâ 1. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –≤–∞—à–µ–≥–æ –ø—É—à–∏—Å—Ç–æ–≥–æ –¥—Ä—É–≥–∞:
                        %s
                           \s
                         üêæ 2. –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–æ–º –∏–¥–µ–∞–ª—å–Ω—ã–º –¥–ª—è —â–µ–Ω–∫–∞? –í–æ—Ç —á—Ç–æ –Ω—É–∂–Ω–æ —É—á–µ—Å—Ç—å:
                        %s
                           \s
                         üè° 3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –¥–æ–º–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –≤–∑—Ä–æ—Å–ª–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞:
                        %s
                           \s
                         ‚ôø 4. –°–æ–≤–µ—Ç—ã –ø–æ –æ–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –¥–æ–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏:
                        %s
                        \s""",
                animalsAdvice.getRecommendationForMoveAnimal().trim(),
                animalsAdvice.getRecommendationForArrangementForPuppy().trim(),
                animalsAdvice.getRecommendationForArrangementForDog().trim(),
                animalsAdvice.getRecommendationForArrangementForDisability().trim()
        );


        messageProvider.changeText(chatId, messageId, info);
        messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimalsAdviceMenu"));


    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é —Å —Å–æ–±–∞–∫–æ–π –æ—Ç –∫–∏–Ω–æ–ª–æ–≥–∞.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–≤–µ—Ç—ã –ø–æ –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é —Å –µ–≥–æ –Ω–æ–≤–æ–π —Å–æ–±–∞–∫–æ–π
     * –æ—Ç –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –∫–∏–Ω–æ–ª–æ–≥–∞.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionsOnDogHandleAdvice(long chatId, int messageId) {
        AnimalsAdvice animalsAdvice = animalAdviceService.getAnimalAdviceById(ANIMALS_ADVICE_ID);
        if (reactionOnError(chatId, messageId, animalsAdvice)) {
            return;
        }

        String info = String.format(
                """
                        üê∂‚ú® –°–æ–≤–µ—Ç—ã –æ—Ç –∫–∏–Ω–æ–ª–æ–≥–∞ –ø–æ –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é —Å –≤–∞—à–µ–π –Ω–æ–≤–æ–π —Å–æ–±–∞–∫–æ–π:
                        %s
                        """, animalsAdvice.getDogHandlerAdvice().trim());

        messageProvider.changeText(chatId, messageId, info);
        messageProvider.changeInline(chatId, messageId, MarkUps.backButton("backToAnimalsAdviceMenu"));

    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionOnGetContact(long chatId, int messageId) {
        messageProvider.deleteMessage(chatId, messageId);
        messageProvider.putKeyBoard(chatId, "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞," +
                " –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–∂–º–∏—Ç–µ /start", MarkUps.getContact());
    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ö—Ä–∞–Ω—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
     * –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –ø—Ä–∏—é—Ç–∞.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionOnSecurityPrecautions(long chatId, int messageId) {
        ShelterInfo shelterInfo = shelterInfoService.getShelterInfoById(SHELTER_ID);
        if (shelterInfo == null) {
            messageProvider.putMessage(chatId, "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ /start");
            return;
        }

        String info = String.format("""
                <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b>
                
                –ù–∞—à –±–æ—Ç —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö:
                
                <b>üîê –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ö—Ä–∞–Ω—ã:</b>
                –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –Ω–∞ –º–∞—à–∏–Ω—É, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ö—Ä–∞–Ω–æ–π –ø–æ –Ω–æ–º–µ—Ä—É:
                %s
                
                <b>‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</b>
                %s""", shelterInfo.getSecurityContact(), shelterInfo.getSafetyPrecautions());


        messageProvider.changeText(chatId, messageId, info);
        messageProvider.changeInline(chatId, messageId, MarkUps.backButton("BackToInfoAboutShelterMenu"));

    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏—é—Ç–µ.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏—é—Ç–∞, –µ–≥–æ –∞–¥—Ä–µ—Å–µ –∏
     * —Å—Ö–µ–º–µ –ø—Ä–æ–µ–∑–¥–∞.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionOnGeneralInformation(long chatId, int messageId) {
        ShelterInfo shelterInfo = shelterInfoService.getShelterInfoById(SHELTER_ID);
        if (shelterInfo == null) {
            messageProvider.putMessage(chatId, "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ /start");
            return;
        }
        Schedules schedules = shelterInfo.getSchedules();
        if (schedules == null) {
            messageProvider.putMessage(chatId, "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ /start");
            return;
        }

        String info = String.format("""
                        <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏—é—Ç–µ</b>
                        
                        –ù–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏—é—Ç–µ:
                        
                        <b>\uD83D\uDCC5 –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã:</b>
                           –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: %s
                           –í—Ç–æ—Ä–Ω–∏–∫: %s
                           –°—Ä–µ–¥–∞: %s
                           –ß–µ—Ç–≤–µ—Ä–≥: %s
                           –ü—è—Ç–Ω–∏—Ü–∞: %s
                           –°—É–±–±–æ—Ç–∞: %s
                           –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: %s
                        
                        <b>\uD83D\uDCCD –ê–¥—Ä–µ—Å –ø—Ä–∏—é—Ç–∞:</b>
                           %s
                        
                        <b>\uD83D\uDDFAÔ∏è –°—Ö–µ–º–∞ –ø—Ä–æ–µ–∑–¥–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤—ã—à–µ</b>""",
                schedules.getMonday(),
                schedules.getTuesday(),
                schedules.getWednesday(),
                schedules.getThursday(),
                schedules.getFriday(),
                schedules.getSunday(),
                schedules.getSaturday(),
                shelterInfo.getAddress());

        messageProvider.deleteMessage(chatId, messageId);

        messageProvider.sendPhoto(chatId, info, shelterInfo.getSchemaForRoadPhotoUrl(),
                MarkUps.backButton("backToInfoAboutShelterMenuDel"));


    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏—é—Ç–µ.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏—é—Ç–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
     * –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void reactionOnInfoAboutShelter(long chatId, int messageId) {

        messageProvider.changeText(chatId, messageId, INFO_ABOUT_SHELTER);
        messageProvider.changeInline(chatId, messageId, MarkUps.InfoAboutShelterMenu());
    }

    /**
     * –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º.
     * <p>
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ª—É—á–∞–π–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
     * –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param back —Å—Ç—Ä–æ–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
     */
    private void reactionOnCallVolunteer(long chatId, int messageId, String back) {
        messageProvider.deleteMessage(chatId, messageId);
        Volunteers volunteers = volunteersService.getRandomVolunteer();
        if (volunteers != null && volunteers.getContact() != null) {
            messageProvider.sendContact(chatId, volunteers.getContact(), volunteers.getName(), volunteers.getSecondName(),
                    MarkUps.backButton(back));
            return;
        }
        messageProvider.putMessageWithMarkUps(chatId, "–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤",
                MarkUps.backButton(back));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     * <p>
     * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ
     * —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
     * –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞.
     * </p>
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param name –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private void startMessage(long chatId, String name) {
        if (telegramUserService.isNewUserByTelegramId(chatId)) {
            TelegramUserDTO telegramUser = new TelegramUserDTO();
            telegramUser.setTelegramId(chatId);
            telegramUser.setName(name);
            telegramUserService.addTelegramUser(telegramUser);
            messageProvider.putMessage(chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å " + name, true);
        }

        messageProvider.putMessageWithMarkUps(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª",
                MarkUps.startMenu(), true);
    }

    @Override
    public String getBotUsername() {
        return botConfig.getBotName();
    }
}
